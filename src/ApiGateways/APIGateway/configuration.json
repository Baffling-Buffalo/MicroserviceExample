{
  "ReRoutes": [
    // API 1 ROUTES

    //{
    //  "UpstreamPathTemplate": "/api1/{everything}",
    //  "UpstreamHttpMethod": [ "Get", "Post", "Put" ],
    //  "DownstreamPathTemplate": "/api1/{everything}",
    //  "DownstreamScheme": "http",
    //  "DownstreamHostAndPorts": [
    //    {
    //      "Host": "devmasina",
    //      "Port": 40002
    //    }
    //    // Load balancing example if you create another instance of same api
    //    //,{
    //    //  "Host": "devmasina",
    //    //  "Port": 5004
    //    //}
    //  ],
    //  "LoadBalancerOptions": {
    //    "Type": "LeastConnection"
    //  },
    //  "AuthenticationOptions": {
    //    "AuthenticationProviderKey": "Bearer",
    //    "AllowedScopes": [ "api1" ]
    //  }
    //},
    {
      // OZ7
      "UpstreamPathTemplate": "/oz7/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "DownstreamPathTemplate": "/oz7/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "172.31.10.74",
          "Port": 8080
        }
      ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer"
      }
    },
    {
      // CONTACTS.API/CONTACT

      "UpstreamPathTemplate": "/api/c/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "devmasina",
          "Port": 40002
        }
      ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": [ "Contact" ]
      }
    },

    {
      // FORM.API

      "UpstreamPathTemplate": "/api/f/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 40003
        }
      ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": [ "Form" ]
      }
    },

    {
      // SESSION.API

      "UpstreamPathTemplate": "/api/s/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 40004
        }
      ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": [ "Session" ]
      }
    },

    {
      // LOG.API

      "UpstreamPathTemplate": "/api/l/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 40008
        }
      ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": [ "Logs" ]
      }
    }
  ],

  // AGGREGATIONS - from one request to gateway making many requests
  // and handling response in aggregator class
  // ReRouteKeys are defined up in ReRoute objects as "key": "key_name" for routes you wish to combine and
  // Aggregator is defined at startup

  //"Aggregates": [
  //  {
  //    "ReRouteKeys": [
  //      "api1data",
  //      "api2data"
  //    ],
  //    "UpstreamPathTemplate": "/api1and2",
  //    "Aggregator": "Api1and2Aggregator"
  //  }
  //],


  "GlobalConfiguration": {
    "BaseUrl": "http://devmasina:40000",
    "RequestIdKey": "X-Correlation-ID"
    //"AdministrationPath": "/administration"
  }
}